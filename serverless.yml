service: star-wars-lambda-graphql

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  environment:
    CHARACTERS_TABLE_NAME: characters
    X_API_KEY: very-long-and-serious-key # SHOULD BE FETCHED FROM AWS SECRETS MANAGER
    region: eu-central-1
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  memorySize: 128
  iam:
    role:
      statements:
        - Effect: Allow
          Action: # Gives permission to DynamoDB tables in a specific region
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:eu-central-1:*:*'

functions:
  graphql:
    handler: src/handler.graphqlHandler
    events:
      - http:
          path: graphql
          method: POST
          cors: true


resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: characters
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  dynamodb:
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: false

    seed:
      domain:
        sources:
          - table: characters
            sources: [ ./characters.json ]
